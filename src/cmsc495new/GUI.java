package cmsc495new;

/**
 * @author Adam Santana (Team Bravo)
 * @version 1.0
 * @since 2020-9-19
 *
 * Description: This is where all the components for the GUI are created and
 * initialized. This class is also utilized to set the values input by the user
 * (Customer info & reservation info). This class creates three panels, one for
 * Cars, one for Hotels, and one for Airlines. After the required values are
 * set, and the search button is triggered the respective class for the visible
 * panel will be called. The classes are Cars, Hotels and Airline. The class
 * that is called is responsible for fetching data from a DB and displaying it
 * on its corresponding JTable.
 */
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class GUI extends javax.swing.JFrame {

    public GUI() {
        initComponents(); // Initializes all components
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        customerPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        fistNameText = new javax.swing.JTextField();
        lastNameText = new javax.swing.JTextField();
        makeReservation = new javax.swing.JButton();
        CustomerPanelTitleLabel = new javax.swing.JLabel();
        topPanel = new javax.swing.JPanel();
        flightsButton = new javax.swing.JButton();
        hotelsButton = new javax.swing.JButton();
        rentalButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        rentalsPanel = new javax.swing.JPanel();
        rentalsScrollPane = new javax.swing.JScrollPane();
        rentalsTable = new javax.swing.JTable();
        paxCapacityComboBox = new javax.swing.JComboBox<>();
        carBodyTypeComboBox = new javax.swing.JComboBox<>();
        carMakeComboBox = new javax.swing.JComboBox<>();
        passengerCapacityLabel = new javax.swing.JLabel();
        bodyTypeLabel = new javax.swing.JLabel();
        makeLabel = new javax.swing.JLabel();
        searchButton1 = new javax.swing.JButton();
        rentalsTitleLabel = new javax.swing.JLabel();
        rentalDropOffDateChooser = new com.toedter.calendar.JDateChooser();
        carDropOffDateLabel = new javax.swing.JLabel();
        carYearComboBox = new javax.swing.JComboBox<>();
        yearLabel = new javax.swing.JLabel();
        carPickUpDateLabel = new javax.swing.JLabel();
        rentalPickUpDateChooser = new com.toedter.calendar.JDateChooser();
        modelLabel = new javax.swing.JLabel();
        modelComboBox = new javax.swing.JComboBox<>();
        flightsPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        flightsTable = new javax.swing.JTable();
        airlineComboBox = new javax.swing.JComboBox<>();
        airlineLabel = new javax.swing.JLabel();
        numberOfPassengersLabel = new javax.swing.JLabel();
        flightClassLabel = new javax.swing.JLabel();
        numberOfPassengersComboBox = new javax.swing.JComboBox<>();
        flightClassComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        hotelPanel = new javax.swing.JPanel();
        hotelsScrollPane = new javax.swing.JScrollPane();
        hotelsTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        numberOfGuestsComboBox = new javax.swing.JComboBox<>();
        bedTypeComboBox = new javax.swing.JComboBox<>();
        numberOfGuestsLabel = new javax.swing.JLabel();
        bedTypeLabel = new javax.swing.JLabel();
        numberOfBedsLabel = new javax.swing.JLabel();
        numberOfBedsComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        checkInLabel = new javax.swing.JLabel();
        checkOutLabel = new javax.swing.JLabel();
        checkInDateChooser = new com.toedter.calendar.JDateChooser();
        checkOutDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bravo's Team App");
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        mainPanel.setLayout(new java.awt.BorderLayout());

        customerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        customerPanel.setPreferredSize(new java.awt.Dimension(823, 120));

        firstNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        firstNameLabel.setText("First Name:");

        lastNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lastNameLabel.setText("Last Name:");

        fistNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lastNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        makeReservation.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        makeReservation.setText("Make Reservation");
        makeReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeReservationActionPerformed(evt);
            }
        });

        CustomerPanelTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CustomerPanelTitleLabel.setText("Customer Information");

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
                customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(customerPanelLayout.createSequentialGroup()
                                .addContainerGap(174, Short.MAX_VALUE)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                                                .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(fistNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(makeReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(174, 174, 174))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                                                .addComponent(CustomerPanelTitleLabel)
                                                .addGap(347, 347, 347))))
        );
        customerPanelLayout.setVerticalGroup(
                customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(CustomerPanelTitleLabel)
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fistNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(makeReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(26, Short.MAX_VALUE))
        );

        mainPanel.add(customerPanel, java.awt.BorderLayout.CENTER);

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        topPanel.setPreferredSize(new java.awt.Dimension(823, 150));

        flightsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        flightsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plane-icon.png"))); // NOI18N
        flightsButton.setText("Flights");
        flightsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        flightsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        flightsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePanel(evt);
            }
        });

        hotelsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hotelsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hotel-icon.png"))); // NOI18N
        hotelsButton.setText("Hotels");
        hotelsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hotelsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        hotelsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePanel(evt);
            }
        });

        rentalButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rentalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/car-icon.png"))); // NOI18N
        rentalButton.setText("Rentals");
        rentalButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rentalButton.setIconTextGap(2);
        rentalButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rentalButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePanel(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Get Off Gilligan's Island");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
                topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(topPanelLayout.createSequentialGroup()
                                .addContainerGap(256, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(239, 239, 239))
                        .addGroup(topPanelLayout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(flightsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(hotelsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(rentalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
                topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rentalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(hotelsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(flightsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(22, Short.MAX_VALUE))
        );

        mainPanel.add(topPanel, java.awt.BorderLayout.PAGE_START);

        bottomPanel.setPreferredSize(new java.awt.Dimension(823, 430));
        bottomPanel.setLayout(new java.awt.CardLayout());

        rentalsPanel.setBackground(new java.awt.Color(241, 241, 242));
        rentalsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rentalsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Capacity", "Body Type", "Make", "Model", "Year", "Price"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        rentalsTable.getTableHeader().setReorderingAllowed(false);
        rentalsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rowSelected(evt);
            }
        });
        rentalsScrollPane.setViewportView(rentalsTable);
        if (rentalsTable.getColumnModel().getColumnCount() > 0) {
            rentalsTable.getColumnModel().getColumn(0).setResizable(false);
            rentalsTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            rentalsTable.getColumnModel().getColumn(1).setResizable(false);
            rentalsTable.getColumnModel().getColumn(1).setPreferredWidth(40);
            rentalsTable.getColumnModel().getColumn(2).setResizable(false);
            rentalsTable.getColumnModel().getColumn(2).setPreferredWidth(50);
            rentalsTable.getColumnModel().getColumn(3).setResizable(false);
            rentalsTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            rentalsTable.getColumnModel().getColumn(4).setResizable(false);
            rentalsTable.getColumnModel().getColumn(5).setResizable(false);
            rentalsTable.getColumnModel().getColumn(5).setPreferredWidth(60);
            rentalsTable.getColumnModel().getColumn(6).setResizable(false);
            rentalsTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        }

        paxCapacityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getPassengerCapacity()));

        carBodyTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getBodyType()));

        carMakeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getMake()));

        passengerCapacityLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        passengerCapacityLabel.setText("Passenger Capacity:");

        bodyTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bodyTypeLabel.setText("Body Type:");

        makeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        makeLabel.setText("Make:");

        searchButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchButton1.setText("Search");
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        rentalsTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rentalsTitleLabel.setText("Car Rental Reservation");

        rentalDropOffDateChooser.setDateFormatString("MM/dd/yy");
        rentalDropOffDateChooser.setMinSelectableDate(new Date());

        carDropOffDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        carDropOffDateLabel.setText("Drop off Date:");

        carYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getYear()));

        yearLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yearLabel.setText("Year:");

        carPickUpDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        carPickUpDateLabel.setText("Pick-up Date:");

        rentalPickUpDateChooser.setDateFormatString("MM/dd/yy");
        rentalPickUpDateChooser.setMinSelectableDate(new Date());

        modelLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelLabel.setText("Model:");

        modelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getModel()));

        javax.swing.GroupLayout rentalsPanelLayout = new javax.swing.GroupLayout(rentalsPanel);
        rentalsPanel.setLayout(rentalsPanelLayout);
        rentalsPanelLayout.setHorizontalGroup(
                rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(searchButton1)
                                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(passengerCapacityLabel)
                                                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(bodyTypeLabel)
                                                                        .addComponent(makeLabel))
                                                                .addGap(3, 3, 3)))
                                                .addGap(27, 27, 27)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(modelComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(paxCapacityComboBox, 0, 115, Short.MAX_VALUE)
                                                        .addComponent(carBodyTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(carMakeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(carDropOffDateLabel)
                                                        .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(yearLabel)
                                                                .addComponent(carPickUpDateLabel)
                                                                .addComponent(modelLabel)))
                                                .addGap(27, 27, 27)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(rentalDropOffDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(carYearComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rentalPickUpDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                                .addComponent(rentalsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(rentalsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE))
                                .addContainerGap())
        );
        rentalsPanelLayout.setVerticalGroup(
                rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rentalsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(rentalsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(rentalsPanelLayout.createSequentialGroup()
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(paxCapacityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(passengerCapacityLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(carBodyTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(bodyTypeLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(carMakeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(makeLabel))
                                                .addGap(17, 17, 17)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(modelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(modelLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(carYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(yearLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(rentalPickUpDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(carPickUpDateLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(rentalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(rentalDropOffDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(carDropOffDateLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(18, 18, 18)
                                                .addComponent(searchButton1))
                                        .addComponent(rentalsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(42, Short.MAX_VALUE))
        );

        bottomPanel.add(rentalsPanel, "card4");

        flightsPanel.setBackground(new java.awt.Color(241, 241, 242));
        flightsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        flightsPanel.setPreferredSize(new java.awt.Dimension(823, 300));
        flightsPanel.setVerifyInputWhenFocusTarget(false);

        flightsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Airline", "Flight Class", "Departure", "Arrival", "Price", "Available", "Reserved"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        flightsTable.getTableHeader().setReorderingAllowed(false);
        flightsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rowSelected(evt);
            }
        });
        jScrollPane4.setViewportView(flightsTable);
        if (flightsTable.getColumnModel().getColumnCount() > 0) {
            flightsTable.getColumnModel().getColumn(0).setResizable(false);
            flightsTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            flightsTable.getColumnModel().getColumn(1).setResizable(false);
            flightsTable.getColumnModel().getColumn(1).setPreferredWidth(110);
            flightsTable.getColumnModel().getColumn(2).setResizable(false);
            flightsTable.getColumnModel().getColumn(3).setResizable(false);
            flightsTable.getColumnModel().getColumn(4).setResizable(false);
            flightsTable.getColumnModel().getColumn(5).setResizable(false);
            flightsTable.getColumnModel().getColumn(5).setPreferredWidth(60);
            flightsTable.getColumnModel().getColumn(6).setResizable(false);
            flightsTable.getColumnModel().getColumn(6).setPreferredWidth(60);
            flightsTable.getColumnModel().getColumn(7).setResizable(false);
            flightsTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        }

        airlineComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getAirline()));

        airlineLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        airlineLabel.setText("Airline:");

        numberOfPassengersLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberOfPassengersLabel.setText("Number of Passengers:");

        flightClassLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        flightClassLabel.setText("Flight Class:");

        numberOfPassengersComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getNumberOfPasengers()));

        flightClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getFlightClass()));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Flight Reservation");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flightsPanelLayout = new javax.swing.GroupLayout(flightsPanel);
        flightsPanel.setLayout(flightsPanelLayout);
        flightsPanelLayout.setHorizontalGroup(
                flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(flightsPanelLayout.createSequentialGroup()
                                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(airlineLabel)
                                                        .addComponent(numberOfPassengersLabel)
                                                        .addComponent(flightClassLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(numberOfPassengersComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 139, Short.MAX_VALUE)
                                                        .addComponent(flightClassComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(airlineComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jButton1))
                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(flightsPanelLayout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(flightsPanelLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        flightsPanelLayout.setVerticalGroup(
                flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(flightsPanelLayout.createSequentialGroup()
                                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(airlineLabel)
                                                        .addComponent(airlineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numberOfPassengersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(numberOfPassengersLabel))
                                                .addGap(16, 16, 16)
                                                .addGroup(flightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(flightClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(flightClassLabel))
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton1)))
                                .addContainerGap(37, Short.MAX_VALUE))
        );

        bottomPanel.add(flightsPanel, "card2");

        hotelPanel.setBackground(new java.awt.Color(241, 241, 242));
        hotelPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        hotelsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Capacity", "Bed Type", "Feature", "Price"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        hotelsTable.getTableHeader().setReorderingAllowed(false);
        hotelsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rowSelected(evt);
            }
        });
        hotelsScrollPane.setViewportView(hotelsTable);
        if (hotelsTable.getColumnModel().getColumnCount() > 0) {
            hotelsTable.getColumnModel().getColumn(0).setResizable(false);
            hotelsTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            hotelsTable.getColumnModel().getColumn(1).setResizable(false);
            hotelsTable.getColumnModel().getColumn(1).setPreferredWidth(60);
            hotelsTable.getColumnModel().getColumn(3).setPreferredWidth(300);
            hotelsTable.getColumnModel().getColumn(4).setResizable(false);
            hotelsTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        numberOfGuestsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getNumberOfGuests()));

        bedTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getBedType()));

        numberOfGuestsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberOfGuestsLabel.setText("Number of Guests:");

        bedTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bedTypeLabel.setText("Bed Type:");

        numberOfBedsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberOfBedsLabel.setText("Number of Beds:");

        numberOfBedsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboBoxValues().getNumberOfBeds()));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Hotel Reservation");

        checkInLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        checkInLabel.setText("Check-In:");

        checkOutLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        checkOutLabel.setText("Check-Out:");

        checkInDateChooser.setDateFormatString("MM/dd/yy");
        checkInDateChooser.setMinSelectableDate(new Date());

        checkOutDateChooser.setDateFormatString("MM/dd/yy");
        checkOutDateChooser.setMinSelectableDate(new Date());

        javax.swing.GroupLayout hotelPanelLayout = new javax.swing.GroupLayout(hotelPanel);
        hotelPanel.setLayout(hotelPanelLayout);
        hotelPanelLayout.setHorizontalGroup(
                hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hotelPanelLayout.createSequentialGroup()
                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(hotelPanelLayout.createSequentialGroup()
                                                .addGap(48, 48, 48)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(numberOfBedsLabel)
                                                        .addComponent(numberOfGuestsLabel)
                                                        .addComponent(bedTypeLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(numberOfGuestsComboBox, 0, 110, Short.MAX_VALUE)
                                                        .addComponent(numberOfBedsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(bedTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelPanelLayout.createSequentialGroup()
                                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(checkInLabel)
                                                                        .addComponent(checkOutLabel))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addComponent(checkOutDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(checkInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(hotelPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(hotelsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE))
                                .addContainerGap())
        );
        hotelPanelLayout.setVerticalGroup(
                hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(hotelsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(hotelPanelLayout.createSequentialGroup()
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numberOfGuestsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(numberOfGuestsLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numberOfBedsLabel)
                                                        .addComponent(numberOfBedsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(22, 22, 22)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(bedTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(bedTypeLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(checkInDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(checkInLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(hotelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(checkOutDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(checkOutLabel))
                                                .addGap(18, 18, 18)
                                                .addComponent(searchButton)))
                                .addGap(38, 38, 38))
        );

        bottomPanel.add(hotelPanel, "card3");

        mainPanel.add(bottomPanel, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Method used to toggle between panels
    private void changePanel(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePanel

        if (evt.getSource() == rentalButton) {
            while (rentalsTable.getRowCount() > 0) { // Clears table
                ((DefaultTableModel) rentalsTable.getModel()).removeRow(0);
            }
            setRowSelected(null); // When a new panel is selected, set row to null to ensure new row is picked.
            rentalsPanel.setVisible(true);
            flightsPanel.setVisible(false);
            hotelPanel.setVisible(false);

        }
        if (evt.getSource() == flightsButton) {
            while (flightsTable.getRowCount() > 0) {// Clears table
                ((DefaultTableModel) flightsTable.getModel()).removeRow(0);
            }
            setRowSelected(null); // When a new panel is selected, set row to null to ensure new row is picked.
            rentalsPanel.setVisible(false);
            flightsPanel.setVisible(true);
            hotelPanel.setVisible(false);

        }
        if (evt.getSource() == hotelsButton) {
            while (hotelsTable.getRowCount() > 0) {// Clears table
                ((DefaultTableModel) hotelsTable.getModel()).removeRow(0);
            }
            setRowSelected(null); // When a new panel is selected, set row to null to ensure new row is picked.
            rentalsPanel.setVisible(false);
            flightsPanel.setVisible(false);
            hotelPanel.setVisible(true);

        }
    }//GEN-LAST:event_changePanel

    // Method for row selection. This method saves the ID of the row selected by user. The ID
    // can be used to reference customer reservation on the Reservation Table in the DB.
    private void rowSelected(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rowSelected

        if (evt.getSource() != null) {
            setRowID((int) tableModel.getValueAt(getRowSelected().getMinSelectionIndex(), 0));
        }
    }//GEN-LAST:event_rowSelected

    // Listener for reservation button. This method also checks if customer information has been provided,
    // that a row has been selected, and that a date has been selected (If required).
    private void makeReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeReservationActionPerformed
        int userAnswer = 0;
        if (!(fistNameText.getText().isEmpty() || lastNameText.getText().isEmpty())) { // Check if name and last name are set.
            setCustomerFirstName(fistNameText.getText());
            setCustomerLastName(lastNameText.getText());
            if (getRowSelected() != null) { // Check if a row from the table has been selectect.
                if (getRowSelected().getMinSelectionIndex() >= 0) { // Check if Row ID has been set.
                    if (rentalsPanel.isVisible()) {
                        if ((rentalPickUpDateChooser.getDate() != null && rentalDropOffDateChooser.getDate() != null)
                                && (rentalPickUpDateChooser.getDate().before(rentalDropOffDateChooser.getDate()))) { // Check if dates have been selected
                            userAnswer = JOptionPane.showConfirmDialog(null, "Make Reservation?", "Submit Reservation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                            if (userAnswer == JOptionPane.YES_OPTION) {
                                setPickUpDate(newFormat(rentalPickUpDateChooser.getDate(), "yyyy-MM-dd"));
                                setDropOffDate(newFormat(rentalDropOffDateChooser.getDate(), "yyyy-MM-dd"));
                                /* 
                                 * ADDED BY GABRIELLE JEUCK TO RESERVE SELECTED ID FROM CARS TABLE.
                                 */
                                JOptionPane.showMessageDialog(null, cars.getConfirmation(getCustomerFirstName() + " " + getCustomerLastName(), getRowID(), getPickUpDate(), getDropOffDate()));
                                cars.getAllCarsData(getTableModel());
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Select dates\n (The pick-up date must be prior to Drop off date.)");
                        } 
                    } else if (hotelPanel.isVisible()) {
                        /* 
                         * ADDED BY CLIFTON AYERS TO RESERVE SELECTED ID FROM HOTELS TABLE.
                         */
                        String Message = Hotels.checkDateRange(checkInDateChooser.getDate(), checkOutDateChooser.getDate());

                        if (!Message.isEmpty()) {
                            JOptionPane.showMessageDialog(null, Message);
                        }

                        userAnswer = JOptionPane.showConfirmDialog(null, "Make Reservation?", "Submit Reservation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (userAnswer == JOptionPane.YES_OPTION) {
                            Hotels.Add(getRowID(), getCustomerFirstName() + " " + getCustomerLastName(), checkInDateChooser, checkOutDateChooser);

                            //Search again to clear out newly inserted item(s)
                            Hotels.Search(numberOfGuestsComboBox, numberOfBedsComboBox, bedTypeComboBox,
                                    checkInDateChooser, checkOutDateChooser,
                                    getTableModel());
                        }
                    } else if (flightsPanel.isVisible()) {
                        userAnswer = JOptionPane.showConfirmDialog(null, "Make Reservation?", "Submit Reservation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (userAnswer == JOptionPane.YES_OPTION) {// If user selects "YES" on Confirm Dialog make reservation.
                        /* 
                         * ADDED BY Steven Troxell TO RESERVE SELECTED ID FROM AIRLINES TABLE.
                         */
                            // Updates the availabilities & Flight Reservations databases and then refreshes the available options in the UI
                            a.updateRecord(Integer.parseInt(numberOfPassengersComboBox.getSelectedItem().toString()), getRowID(), (fistNameText.getText() + " " + lastNameText.getText()));
                            a.getData(getTableModel(), airlineComboBox.getSelectedItem().toString(), flightClassComboBox.getSelectedItem().toString(), Integer.parseInt(numberOfPassengersComboBox.getSelectedItem().toString()));
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Select item from table to continue.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Select item from table to continue.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please add customer first and last name.");
        }
    }//GEN-LAST:event_makeReservationActionPerformed

    //Listener for search button
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // added by Steven Troxell
        if (flightsPanel.isVisible()) {
            setTableModel(flightsTable.getModel()); // gets table model.
            setRowSelected(flightsTable.getSelectionModel()); // gets row selected. Used to get Rows ID.

            // Updates the available options in the UI
            a.getData(getTableModel(), airlineComboBox.getSelectedItem().toString(), flightClassComboBox.getSelectedItem().toString(), Integer.parseInt(numberOfPassengersComboBox.getSelectedItem().toString()));

        }

        // Added by Gabrielle Jeuck 9/23/2020
        if (rentalsPanel.isVisible()) {
            setTableModel(rentalsTable.getModel());
            setRowSelected(rentalsTable.getSelectionModel());
            // sets variables to be passed to constructor of cars to filter
            cars.setCapacity(String.valueOf(paxCapacityComboBox.getSelectedItem()));
            cars.setBodyType(String.valueOf(carBodyTypeComboBox.getSelectedItem()));
            cars.setMake(String.valueOf(carMakeComboBox.getSelectedItem()));
            cars.setModel(String.valueOf(modelComboBox.getSelectedItem()));
            cars.setYear(String.valueOf(carYearComboBox.getSelectedItem()));
            cars.setPickUp(getPickUpDate());
            cars.setDropOff(getDropOffDate());
            // makes user select dates before searching to validate dates aren't reserved
            if ((rentalPickUpDateChooser.getDate() != null && rentalDropOffDateChooser.getDate() != null)
                    && (rentalPickUpDateChooser.getDate().before(rentalDropOffDateChooser.getDate()))) {

                setPickUpDate(newFormat(rentalPickUpDateChooser.getDate(), "yyyy-MM-dd"));
                setDropOffDate(newFormat(rentalDropOffDateChooser.getDate(), "yyyy-MM-dd"));

                // calls CarsReservation class as cars and passes search details
                cars.getAllCarsData(getTableModel());
                // if dates aren't chosen, prompts user with message dialog
            } else {
                JOptionPane.showMessageDialog(null, "Please select appropriate dates for reservation.");
            }
        }
        // added by Clifton Ayers
        if (hotelPanel.isVisible()) {
            setTableModel(hotelsTable.getModel());
            setRowSelected(hotelsTable.getSelectionModel());

            String Message = Hotels.checkDateRange(checkInDateChooser.getDate(), checkOutDateChooser.getDate());

            if (!Message.isEmpty()) {
                JOptionPane.showMessageDialog(null, Message);
            } else {
                Hotels.Search(numberOfGuestsComboBox, numberOfBedsComboBox, bedTypeComboBox,
                        checkInDateChooser, checkOutDateChooser,
                        getTableModel());
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    // Method used to set new date format
    public String newFormat(Date date, String format) {
        SimpleDateFormat df = new SimpleDateFormat(format);
        return df.format(date);
    }

    // Getters and Setters
    public void setCustomerFirstName(String customerFirstName) {
        this.customerFirstName = customerFirstName;
    }

    public void setCustomerLastName(String customerLastName) {
        this.customerLastName = customerLastName;
    }

    public String getCustomerFirstName() {
        return customerFirstName;
    }

    public String getCustomerLastName() {
        return customerLastName;
    }

    public ListSelectionModel getRowSelected() {
        return rowSelected;
    }

    public void setRowSelected(ListSelectionModel rowSelected) {
        this.rowSelected = rowSelected;
    }

    public int getRowID() {
        return rowID;
    }

    public void setRowID(int rowID) {
        this.rowID = rowID;
    }

    public TableModel getTableModel() {
        return tableModel;
    }

    public void setTableModel(TableModel tm) {
        tableModel = tm;
    }

    public String getPickUpDate() {
        return pickUpDate;
    }

    public String getCheckInDate() {
        return checkInDate;
    }

    public String getCheckOutDate() {
        return CheckOutDate;
    }

    public String getDropOffDate() {
        return dropOffDate;
    }

    public void setCheckInDate(String checkInDate) {
        this.checkInDate = checkInDate;
    }

    public void setCheckOutDate(String CheckOutDate) {
        this.CheckOutDate = CheckOutDate;
    }

    public void setPickUpDate(String pickUpDate) {
        this.pickUpDate = pickUpDate;
    }

    public void setDropOffDate(String dropOffDate) {
        this.dropOffDate = dropOffDate;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CustomerPanelTitleLabel;
    private javax.swing.JComboBox<String> airlineComboBox;
    private javax.swing.JLabel airlineLabel;
    private javax.swing.JComboBox<String> bedTypeComboBox;
    private javax.swing.JLabel bedTypeLabel;
    private javax.swing.JLabel bodyTypeLabel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JComboBox<String> carBodyTypeComboBox;
    private javax.swing.JLabel carDropOffDateLabel;
    private javax.swing.JComboBox<String> carMakeComboBox;
    private javax.swing.JLabel carPickUpDateLabel;
    private javax.swing.JComboBox<String> carYearComboBox;
    private com.toedter.calendar.JDateChooser checkInDateChooser;
    private javax.swing.JLabel checkInLabel;
    private com.toedter.calendar.JDateChooser checkOutDateChooser;
    private javax.swing.JLabel checkOutLabel;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField fistNameText;
    private javax.swing.JComboBox<String> flightClassComboBox;
    private javax.swing.JLabel flightClassLabel;
    private javax.swing.JButton flightsButton;
    private javax.swing.JPanel flightsPanel;
    private javax.swing.JTable flightsTable;
    private javax.swing.JPanel hotelPanel;
    private javax.swing.JButton hotelsButton;
    private javax.swing.JScrollPane hotelsScrollPane;
    private javax.swing.JTable hotelsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel makeLabel;
    private javax.swing.JButton makeReservation;
    private javax.swing.JComboBox<String> modelComboBox;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JComboBox<String> numberOfBedsComboBox;
    private javax.swing.JLabel numberOfBedsLabel;
    private javax.swing.JComboBox<String> numberOfGuestsComboBox;
    private javax.swing.JLabel numberOfGuestsLabel;
    private javax.swing.JComboBox<String> numberOfPassengersComboBox;
    private javax.swing.JLabel numberOfPassengersLabel;
    private javax.swing.JLabel passengerCapacityLabel;
    private javax.swing.JComboBox<String> paxCapacityComboBox;
    private javax.swing.JButton rentalButton;
    private com.toedter.calendar.JDateChooser rentalDropOffDateChooser;
    private com.toedter.calendar.JDateChooser rentalPickUpDateChooser;
    private javax.swing.JPanel rentalsPanel;
    private javax.swing.JScrollPane rentalsScrollPane;
    private javax.swing.JTable rentalsTable;
    private javax.swing.JLabel rentalsTitleLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
    private ListSelectionModel rowSelected;
    private TableModel tableModel;
    private String customerFirstName;
    private String customerLastName;
    private int rowID;
    private String checkInDate, CheckOutDate, pickUpDate, dropOffDate;
    private Airplanes a = new Airplanes(); // Airplane database search and update object
    CarsReservation cars = new CarsReservation(); // Rental Cars database object
}
